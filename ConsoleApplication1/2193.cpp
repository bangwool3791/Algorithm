#include "pch.h"

long long dp[91][2] = { {0, 0}, {0, 1}, {1, 0} };
int main()
{
	int n = 0;
	cin >> n;

	/*
	* 이친수는 0으로 시작하지 않는다.
	  1-> 시작 조건

	  이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
		1-> 0 조건
		0-> 0, 1 조건

	* 	N = 1일 때 이친수는 1                             (0 은 불가능)

		N = 2일 때 이친수는 10                            (11은 불가능)

		N = 3일 때 이친수는 100, 101

		N = 4일 때 이친수는 1000, 1001, 1010
	*/
	for (int i = 2; i <= n; ++i)
	{
		//앞자리가 0이면 뒤에 1, 0이 올 수 있다.
		dp[i][0] = dp[i - 1][0] + dp[i - 1][1];
		//앞자리가 1이면 뒤에 0만 올 수 있다.
		dp[i][1] = dp[i - 1][0];
	}

	cout << dp[n][0] + dp[n][1] << endl;
	return 0;
}